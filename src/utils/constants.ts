export const sideLength = 60;
export const halfRadius = 30;
export const triangleHeight = Math.sqrt(2700);
export const rows = 9;
export const cols = 20;
export const pitchClasses = ['C', 'C#/Db', 'D', 'D#/Eb', 'E', 'F', 'F#/Gb', 'G', 'G#/Ab', 'A', 'A#/Bb', 'B'];
export const pcNodes: [number, number, string][] = [
  [-11 * halfRadius, 5 * triangleHeight, pitchClasses[0]],
  [-9 * halfRadius, 5 * triangleHeight, pitchClasses[7]],
  [-7 * halfRadius, 5 * triangleHeight, pitchClasses[2]],
  [-5 * halfRadius, 5 * triangleHeight, pitchClasses[9]],
  [-sideLength - halfRadius, 5 * triangleHeight, pitchClasses[4]],
  [-halfRadius, 5 * triangleHeight, pitchClasses[11]],
  [halfRadius, 5 * triangleHeight, pitchClasses[6]],
  [sideLength + halfRadius, 5 * triangleHeight, pitchClasses[1]],
  [5 * halfRadius, 5 * triangleHeight, pitchClasses[8]],
  [7 * halfRadius, 5 * triangleHeight, pitchClasses[3]],
  [9 * halfRadius, 5 * triangleHeight, pitchClasses[10]],
  [-5 * sideLength, 4 * triangleHeight, pitchClasses[3]],
  [-4 * sideLength, 4 * triangleHeight, pitchClasses[10]],
  [-3 * sideLength, 4 * triangleHeight, pitchClasses[5]],
  [-2 * sideLength, 4 * triangleHeight, pitchClasses[0]],
  [-sideLength, 4 * triangleHeight, pitchClasses[7]],
  [0, 4 * triangleHeight, pitchClasses[2]],
  [sideLength, 4 * triangleHeight, pitchClasses[9]],
  [2 * sideLength, 4 * triangleHeight, pitchClasses[4]],
  [3 * sideLength, 4 * triangleHeight, pitchClasses[11]],
  [4 * sideLength, 4 * triangleHeight, pitchClasses[6]],
  [5 * sideLength, 4 * triangleHeight, pitchClasses[1]],
  [-11 * halfRadius, 3 * triangleHeight, pitchClasses[11]],
  [-9 * halfRadius, 3 * triangleHeight, pitchClasses[6]],
  [-7 * halfRadius, 3 * triangleHeight, pitchClasses[1]],
  [-5 * halfRadius, 3 * triangleHeight, pitchClasses[8]],
  [-sideLength - halfRadius, 3 * triangleHeight, pitchClasses[3]],
  [-halfRadius, 3 * triangleHeight, pitchClasses[10]],
  [halfRadius, 3 * triangleHeight, pitchClasses[5]],
  [sideLength + halfRadius, 3 * triangleHeight, pitchClasses[0]],
  [5 * halfRadius, 3 * triangleHeight, pitchClasses[7]],
  [7 * halfRadius, 3 * triangleHeight, pitchClasses[2]],
  [9 * halfRadius, 3 * triangleHeight, pitchClasses[9]],
  [-5 * sideLength, 2 * triangleHeight, pitchClasses[2]],
  [-4 * sideLength, 2 * triangleHeight, pitchClasses[9]],
  [-3 * sideLength, 2 * triangleHeight, pitchClasses[4]],
  [-2 * sideLength, 2 * triangleHeight, pitchClasses[11]],
  [-sideLength, 2 * triangleHeight, pitchClasses[6]],
  [0, 2 * triangleHeight, pitchClasses[1]],
  [sideLength, 2 * triangleHeight, pitchClasses[8]],
  [2 * sideLength, 2 * triangleHeight, pitchClasses[3]],
  [3 * sideLength, 2 * triangleHeight, pitchClasses[10]],
  [4 * sideLength, 2 * triangleHeight, pitchClasses[5]],
  [5 * sideLength, 2 * triangleHeight, pitchClasses[0]],
  [-11 * halfRadius, triangleHeight, pitchClasses[10]],
  [-9 * halfRadius, triangleHeight, pitchClasses[5]],
  [-7 * halfRadius, triangleHeight, pitchClasses[0]],
  [-5 * halfRadius, triangleHeight, pitchClasses[7]],
  [-sideLength - halfRadius, triangleHeight, pitchClasses[2]],
  [-halfRadius, triangleHeight, pitchClasses[9]],
  [halfRadius, triangleHeight, pitchClasses[4]],
  [sideLength + halfRadius, triangleHeight, pitchClasses[11]],
  [5 * halfRadius, triangleHeight, pitchClasses[6]],
  [7 * halfRadius, triangleHeight, pitchClasses[1]],
  [9 * halfRadius, triangleHeight, pitchClasses[8]],
  [-5 * sideLength, 0, pitchClasses[1]],
  [-4 * sideLength, 0, pitchClasses[8]],
  [-3 * sideLength, 0, pitchClasses[3]],
  [-2 * sideLength, 0, pitchClasses[10]],
  [-sideLength, 0, pitchClasses[5]],
  [0, 0, pitchClasses[0]],
  [sideLength, 0, pitchClasses[7]],
  [2 * sideLength, 0, pitchClasses[2]],
  [3 * sideLength, 0, pitchClasses[9]],
  [4 * sideLength, 0, pitchClasses[4]],
  [5 * sideLength, 0, pitchClasses[11]],
  [-11 * halfRadius, -triangleHeight, pitchClasses[9]],
  [-9 * halfRadius, -triangleHeight, pitchClasses[4]],
  [-7 * halfRadius, -triangleHeight, pitchClasses[11]],
  [-5 * halfRadius, -triangleHeight, pitchClasses[6]],
  [-sideLength - halfRadius, -triangleHeight, pitchClasses[1]],
  [-halfRadius, -triangleHeight, pitchClasses[8]],
  [halfRadius, -triangleHeight, pitchClasses[3]],
  [sideLength + halfRadius, -triangleHeight, pitchClasses[10]],
  [5 * halfRadius, -triangleHeight, pitchClasses[5]],
  [7 * halfRadius, -triangleHeight, pitchClasses[0]],
  [9 * halfRadius, -triangleHeight, pitchClasses[7]],
  [-5 * sideLength, -2 * triangleHeight, pitchClasses[0]],
  [-4 * sideLength, -2 * triangleHeight, pitchClasses[7]],
  [-3 * sideLength, -2 * triangleHeight, pitchClasses[2]],
  [-2 * sideLength, -2 * triangleHeight, pitchClasses[9]],
  [-sideLength, -2 * triangleHeight, pitchClasses[4]],
  [0, -2 * triangleHeight, pitchClasses[11]],
  [sideLength, -2 * triangleHeight, pitchClasses[6]],
  [2 * sideLength, -2 * triangleHeight, pitchClasses[1]],
  [3 * sideLength, -2 * triangleHeight, pitchClasses[8]],
  [4 * sideLength, -2 * triangleHeight, pitchClasses[3]],
  [5 * sideLength, -2 * triangleHeight, pitchClasses[10]],
  [-11 * halfRadius, -3 * triangleHeight, pitchClasses[8]],
  [-9 * halfRadius, -3 * triangleHeight, pitchClasses[3]],
  [-7 * halfRadius, -3 * triangleHeight, pitchClasses[10]],
  [-5 * halfRadius, -3 * triangleHeight, pitchClasses[5]],
  [-sideLength - halfRadius, -3 * triangleHeight, pitchClasses[0]],
  [-halfRadius, -3 * triangleHeight, pitchClasses[7]],
  [halfRadius, -3 * triangleHeight, pitchClasses[2]],
  [sideLength + halfRadius, -3 * triangleHeight, pitchClasses[9]],
  [5 * halfRadius, -3 * triangleHeight, pitchClasses[4]],
  [7 * halfRadius, -3 * triangleHeight, pitchClasses[11]],
  [9 * halfRadius, -3 * triangleHeight, pitchClasses[6]],
  [-5 * sideLength, -4 * triangleHeight, pitchClasses[11]],
  [-4 * sideLength, -4 * triangleHeight, pitchClasses[6]],
  [-3 * sideLength, -4 * triangleHeight, pitchClasses[1]],
  [-2 * sideLength, -4 * triangleHeight, pitchClasses[8]],
  [-sideLength, -4 * triangleHeight, pitchClasses[3]],
  [0, -4 * triangleHeight, pitchClasses[10]],
  [sideLength, -4 * triangleHeight, pitchClasses[5]],
  [2 * sideLength, -4 * triangleHeight, pitchClasses[0]],
  [3 * sideLength, -4 * triangleHeight, pitchClasses[7]],
  [4 * sideLength, -4 * triangleHeight, pitchClasses[2]],
  [5 * sideLength, -4 * triangleHeight, pitchClasses[9]],
];
export const minZoom = 1;
export const maxZoom = 3;
export const step = 0.01;
export const viewBoxWidth = cols * sideLength;
export const viewBoxHeight = rows * triangleHeight + 100;